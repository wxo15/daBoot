@model daBoot.Models.Ticket

<script>
    function updatestatus(ticketid) {
        var statusid = document.getElementById("statuspopupSelect").value;
        if (statusid != null) {
            var xhr = new XMLHttpRequest();
            xhr.open("POST", "/ticket/" + ticketid + "/status/" + statusid, true);
            xhr.onreadystatechange = function () {
                if (this.readyState != 4) return;
                if (this.status == 200) {
                    if (this.responseText == "Success") {
                        document.location.reload(true);
                    }
                }
            };
            xhr.send();
        }
    }

    function popuptoggle(idname) {
        var x = document.getElementById(idname);
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>


<div class="container p-3">
    @if (Model != null)
    {
        <h1>Subject: @Model.Subject</h1>
        <div style="display: flex;">
            <div style="display: flex; flex-direction: column; flex: 1;">
                <p style="display: flex; flex-wrap: wrap;">Priority: @Model.Priority.PriorityName</p>
                <p style="display: flex; flex-wrap: wrap;">Assigner: @((Model.Assigner?.FirstName ?? "").ToString()) @((Model?.Assigner?.LastName ?? "").ToString())</p>
                <p style="display: flex; flex-wrap: wrap;">Assignee: @((Model.Assignee?.FirstName ?? "").ToString()) @((Model.Assignee?.LastName ?? "").ToString())</p>
                <p style="display: flex; flex-wrap: wrap;">Status: @Model.Status.StatusName</p>
                <button title="invite" class="btn btn-primary m-4" onclick="popuptoggle('assignpopup')">Assign to</button>
                @if (ViewData["UserRole"].ToString() == "Dev" || ViewData["UserRole"].ToString() == "Lead")
                {
                    <div id="assignpopup" style="display: none;">
                        <form action="/assign?ticketid=@Model.Id" method="post" id="assignform">
                            <select class="form-select" id="assignpopupSelect" title="selection" form="assignform" name="userid">
                                <option selected>Assign to</option>
                                @if ((IEnumerable<Account>)ViewData["AssigneeCandidate"] != null)
                                {
                                    foreach (var teammember in (IEnumerable<Account>)ViewData["AssigneeCandidate"])
                                    {
                                        <option value=@teammember.Id>@teammember.FirstName @teammember.LastName (@@@teammember.Username)</option>
                                    }
                                }
                            </select>
                            <input type="date" class="form-control" id="deadline" name="deadline" required>
                            <input type="submit" class="form-control" />
                        </form>
                    </div>
                }
            </div>
            <div style="display: flex; flex-direction: column; flex: 1;">
                <p style="display: flex; flex-wrap: wrap;">Id: @Model.Id</p>
                <p style="display: flex; flex-wrap: wrap;">Assigned On: @((Model.AssignedDateTime?.Date.ToString("dd MMM yyyy") ?? "").ToString())</p>
                <p style="display: flex; flex-wrap: wrap;">Deadline: @((Model.Deadline?.Date.ToString("dd MMM yyyy") ?? "").ToString())</p>
                <p style="display: flex; flex-wrap: wrap;">Status Updated On: @Model.StatusUpdated.Date.ToString("dd MMM yyyy")</p>
                @if (Model.Assignee?.Username == User.Claims.FirstOrDefault(c => c.Type == "username").Value)
                {
                    <button title="invite" class="btn btn-success m-4" onclick="popuptoggle('statuspopup')">Update status</button>
                    <div id="statuspopup" style="display: none;">
                        <select class="form-select" id="statuspopupSelect" title="selection" onchange="updatestatus(@Model.Id)">
                            <option selected>Change status to</option>
                            @if ((IEnumerable<Status>)ViewData["StatusCandidate"] != null)
                            {
                                foreach (var validstatus in (IEnumerable<Status>)ViewData["StatusCandidate"])
                                {
                                    <option value=@validstatus.Id>@validstatus.StatusName</option>
                                }
                            }
                        </select>
                    </div>
                }
            </div>
        </div>
        <h3>Description</h3>
        <textarea class="form-control" width ="100%">@Model.Description</textarea>
    }
    else
    {
        <h1>No ticket found, or you have no permission to view it.</h1>
    }
</div>
